#includepath "~/Documents/;%USERPROFILE%Documents";#include "basiljs/bundle/basil.js"; //var string = "ABCDEFGHIJKLMNOPQRSTUVWXYZ" + "\n" + "abcdefghijklmnopqrstuvwxyz" + "\n" + "1234567890 !@#$%&?()";var fonts = app.fonts;var string = "ABCDEFGHIJKLMNOPQRSTUVWXYZ" + "\n" + "abcdefghijklmnopqrstuvwxyz" + "\n" +  "1234567890" +"\n"+"The quick brown fox jumps over the lazy dog";var fontsFilters = ["Apple Braille Outline 6 Dot","Caslon Italic with Swashes Plain", "Apple Braille Outline 8 Dot", "Apple Braille Pinpoint 6 Dot", "Apple Braille Pinpoint 8 Dot", "Apple Braille Regular", "Apple Braille", "BLOKK Neue Regular", "Linotype Didot Ornaments 1", "Linotype Didot Ornaments 2", "Apple Braille Regular", "Helvetica (T1) Fractions", "BLOKK Neue Regular", "Caslon Italic with Swashes Plain", "Linotype Didot Ornaments 1", "Linotype Didot Ornaments 2", "Futura CE Bold", "BLOKK Neue Regular", "Futura CE Bold Oblique", "Futura CE Book", "Futura CE Book Oblique", "Futura CE Extra Bold", "Futura CE Extra Bold Oblique", "Futura CE Heavy", "Futura CE Heavy Oblique", "Futura CE Light", "Futura CE Light Oblique", "Futura CE Medium", "Futura CE Medium Oblique", "Gill Sans CE Bold", "Gill Sans CE Bold Italic", "Gill Sans CE Italic", "Gill Sans CE Light", "Gill Sans CE Light Italic", "Gill Sans CE Roman", "Gill Sans SemiBold", "Gill Sans SemiBold Italic", "Gill Sans SemiBold", "Gill Sans SemiBold Italic", "GillSansMT Shadow", "Helvetica (T1) Fractions", "Helvetica (T1) Bold Fractions", "Hoefler Text Ornaments", "Homestead One", "Homestead Two", "Homestead Three", "Iowan Old Style Titling", "Kailasa Bold", "Kailasa Regular", "Kokonor Regular", "Mshtakan Regular", "Mshtakan Oblique", "Mshtakan Bold", "Mshtakan BoldOblique", "Optima CE Bold", "Optima CE Bold Oblique", "Optima CE Oblique", "Optima CE Roman", "STIXIntegralsD Regular", "STIXIntegralsD Bold", "STIXIntegralsSm Regular", "STIXIntegralsSm Bold", "STIXIntegralsUp Regular", "STIXIntegralsUp Bold", "STIXIntegralsUpD Regular", "STIXIntegralsUpD Bold", "STIXIntegralsUpSm Regular", "STIXIntegralsUpSm Bold", "STIXNonUnicode Regular", "STIXNonUnicode Bold", "STIXNonUnicode Italic", "STIXNonUnicode Bold Italic", "STIXSizeFiveSym Regular", "STIXSizeFourSym Regular", "STIXSizeFourSym Bold", "STIXSizeOneSym Regular", "STIXSizeOneSym Bold", "STIXSizeThreeSym Regular", "STIXSizeThreeSym Bold", "STIXSizeTwoSym Regular", "STIXSizeTwoSym Bold", "STIXVariants Regular", "STIXVariants Bold", "Zapfino Regular", "Zapf Dingbats Regular", "Wingdings 3 Regular", "Wingdings 2 Regular", "Wingdings 1 Regular", "Wingdings Regular", "Webdings Regular", "GB18030Bitmap Regular", "Damascus Regular", "Damascus Light", "Damascus Medium", "Damascus Semi Bold", "Damascus Bold", "DecoType Naskh Regular", "Diwan Kufi Regular", "Diwan Thuluth Regular", "Farah Regular", "Farisi Regular", "Geeza Pro Regular", "Geeza Pro Bold", "KufiStandardGK Regular", "Mishafi Regular", "Mishafi Gold Regular", "Muna Regular", "Muna Bold", "Muna Black", "Nadeem Regular", "Noto Nastaliq Urdu", "Sana Regular", "Waseem Light", "Waseem Regular", "Arial Hebrew Light", "Zapf Dingbats", "Arial Hebrew", "Arial Hebrew Bold", "Arial Hebrew Scholar Light", "Arial Hebrew Scholar", "Arial Hebrew Scholar Bold", "New Peninim MT Bold", "New Peninim MT", "New Peninim MT Bold Inclined", "Raanana Bold", "Raanana", "Devangari MT", "Devangari MT Bold", "Gujarati MT", "Gujarati MT Bold", "Apple Color Emoji",];var caratteri = [];function setup() {  b.clear(b.page()); // clears previous output  b.canvasMode(b.MARGIN);  b.textAlign(Justification.LEFT_ALIGN);    	// Filtro font (Lento)	for (var i=0; i<fonts.length; i++){		var p = fonts[i];		//b.println(i +  "   " + p.platformName);		if (fontsFilters.indexOf(p.platformName) == -1) {			caratteri.push(p);		} else {			b.println(p.platformName);		}	}		  var cols = 2;  var rows = 10;      var cellWidth  = b.width  / cols;  var cellHeight = b.height / rows;         var space = 8;	var num = 0;    	var modulo = cellHeight / 10;	var fontH = modulo * 2;	var textH = modulo * 7;		   for(var f = 0; f < 1; f++){    for(var i = 0; i < cols; i++){      for(var j = 0; j < rows; j++){ 			         var posX = i * cellWidth + i * 5;        var posY = j * cellHeight;			  			  // Filetto in pt        b.stroke(0);        b.strokeWeight(0.5);        b.line(posX, posY, posX + cellWidth-5, posY);                // Stile			  b.noStroke();        b.fill(0);			        // Font			  var selectFont = caratteri[num];			  			  // Nome Font e indice			  b.textSize(7);			  b.textFont("Helvetica Neue", "Medium");			  b.textLeading(Leading.AUTO);        b.text(selectFont.fullName, posX, posY+2.5, cellWidth-5, fontH);			  b.text(num, posX, posY+2.5, cellWidth-5, fontH);			  		        // Alfabeto e numeri			  b.textFont(selectFont);			  b.textSize(11);			  b.textLeading(12.8);        b.text(string , posX, posY+fontH, cellWidth-5, textH);        			  // Increment font			  num++;			  if (num >= caratteri.length) return;        }    }    b.addPage(); // Aggiungi pagina    if (num >= caratteri.length) return; // Condizione d'uscita  }}// Production steps of ECMA-262, Edition 5, 15.4.4.14// Reference: http://es5.github.io/#x15.4.4.14if (!Array.prototype.indexOf) {  Array.prototype.indexOf = function(searchElement, fromIndex) {    var k;    // 1. Let o be the result of calling ToObject passing    //    the this value as the argument.    if (this == null) {      throw new TypeError('"this" is null or not defined');    }    var o = Object(this);    // 2. Let lenValue be the result of calling the Get    //    internal method of o with the argument "length".    // 3. Let len be ToUint32(lenValue).    var len = o.length >>> 0;    // 4. If len is 0, return -1.    if (len === 0) {      return -1;    }    // 5. If argument fromIndex was passed let n be    //    ToInteger(fromIndex); else let n be 0.    var n = +fromIndex || 0;    if (Math.abs(n) === Infinity) {      n = 0;    }    // 6. If n >= len, return -1.    if (n >= len) {      return -1;    }    // 7. If n >= 0, then Let k be n.    // 8. Else, n<0, Let k be len - abs(n).    //    If k is less than 0, then let k be 0.    k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);    // 9. Repeat, while k < len    while (k < len) {      // a. Let Pk be ToString(k).      //   This is implicit for LHS operands of the in operator      // b. Let kPresent be the result of calling the      //    HasProperty internal method of o with argument Pk.      //   This step can be combined with c      // c. If kPresent is true, then      //    i.  Let elementK be the result of calling the Get      //        internal method of o with the argument ToString(k).      //   ii.  Let same be the result of applying the      //        Strict Equality Comparison Algorithm to      //        searchElement and elementK.      //  iii.  If same is true, return k.      if (k in o && o[k] === searchElement) {        return k;      }      k++;    }    return -1;  };}// Esegui codiceb.go();